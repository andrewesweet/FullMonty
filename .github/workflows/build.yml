name: Build Add-In
on: [push]
env:
  ARTIFACT_NAME: xl_addin
  ARTIFACT_EXTENSION: .zip
jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2  

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Restore NuGet Packages
      run: nuget restore FullMonty.sln

    - name: Build Sln
      run: msbuild FullMonty.sln /p:Configuration=Release

    - name: Run Tests
      run: packages/NUnit.ConsoleRunner.3.12.0/tools/nunit3-console.exe FullMonty.UnitTests/bin/Release/FullMonty.UnitTests.dll

    - name: Upload Add-In Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: |
          FullMonty.AddIn/bin/Release/FullMonty.AddIn-AddIn64-packed.xll
          FullMonty.AddIn/bin/Release/FullMonty.AddIn-AddIn64-packed.xll.config
          FullMonty.AddIn/bin/Release/FullMonty.AddIn-AddIn-packed.xll
          FullMonty.AddIn/bin/Release/FullMonty.AddIn-AddIn-packed.xll.config

    - name: Upload Add-In Debug Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}_debug
        path: FullMonty.AddIn/bin/Release/


  release_please:
    needs: build
    runs-on: ubuntu-latest
    outputs:
        release_created: ${{ steps.release.outputs.release_created }}
        upload_url:  ${{ steps.release.outputs.upload_url }}
        major: ${{ steps.release.outputs.major }}
        minor: ${{ steps.release.outputs.minor }}
        patch: ${{ steps.release.outputs.patch }}
    steps:
      - name: Create release
        id: release
        uses: GoogleCloudPlatform/release-please-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple


  release-assets:
    needs: release_please
    runs-on: ubuntu-latest
    if: ${{ needs.release_please.outputs.release_created == 'true' }}
    env:
      ARTIFACT_DIR: "${{ github.workspace }}/FullMonty"
    steps:
      - name: Create temporary directory
        run: mkdir -p "${ARTIFACT_DIR}"

      - name: Download the Add-In from the build job
        uses: actions/download-artifact@v2
        with:
            name: ${{ env.ARTIFACT_NAME }}
            path: ${{ env.ARTIFACT_DIR }}

      - name: Zip the Add-In
        run: |
          zip -j -r "FullMonty.${{ needs.release_please.outputs.major }}.${{ needs.release_please.outputs.minor }}.${{ needs.release_please.outputs.patch }}.zip" "${{ env.ARTIFACT_DIR }}"

      - name: Upload the Add-In as a Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release_please.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_DIR }}/${{ env.ARTIFACT_NAME }}${{ env.ARTIFACT_EXTENSION }}
          asset_name: ${{ env.ARTIFACT_NAME }}${{ env.ARTIFACT_EXTENSION }}
          asset_content_type: application/zip